// Code generated by gonstructor -type CloudSidecar -constructorTypes builder; DO NOT EDIT.

package sidecar

import (
	"github.com/reconquest/snake-runner/internal/executor"
	"github.com/reconquest/snake-runner/internal/sshkey"
)

type CloudSidecarBuilder struct {
	executor       executor.Executor
	name           string
	pipelinesDir   string
	slug           string
	promptConsumer executor.PromptConsumer
	outputConsumer executor.OutputConsumer
	sshKey         sshkey.Key
	volumes        []executor.Volume
}

func NewCloudSidecarBuilder() *CloudSidecarBuilder {
	return &CloudSidecarBuilder{}
}

func (b *CloudSidecarBuilder) Executor(executor executor.Executor) *CloudSidecarBuilder {
	b.executor = executor
	return b
}

func (b *CloudSidecarBuilder) Name(name string) *CloudSidecarBuilder {
	b.name = name
	return b
}

func (b *CloudSidecarBuilder) PipelinesDir(pipelinesDir string) *CloudSidecarBuilder {
	b.pipelinesDir = pipelinesDir
	return b
}

func (b *CloudSidecarBuilder) Slug(slug string) *CloudSidecarBuilder {
	b.slug = slug
	return b
}

func (b *CloudSidecarBuilder) PromptConsumer(promptConsumer executor.PromptConsumer) *CloudSidecarBuilder {
	b.promptConsumer = promptConsumer
	return b
}

func (b *CloudSidecarBuilder) OutputConsumer(outputConsumer executor.OutputConsumer) *CloudSidecarBuilder {
	b.outputConsumer = outputConsumer
	return b
}

func (b *CloudSidecarBuilder) SshKey(sshKey sshkey.Key) *CloudSidecarBuilder {
	b.sshKey = sshKey
	return b
}

func (b *CloudSidecarBuilder) Volumes(volumes []executor.Volume) *CloudSidecarBuilder {
	b.volumes = volumes
	return b
}

func (b *CloudSidecarBuilder) Build() *CloudSidecar {
	return &CloudSidecar{
		executor:       b.executor,
		name:           b.name,
		pipelinesDir:   b.pipelinesDir,
		slug:           b.slug,
		promptConsumer: b.promptConsumer,
		outputConsumer: b.outputConsumer,
		sshKey:         b.sshKey,
		volumes:        b.volumes,
	}
}
